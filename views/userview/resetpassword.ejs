<!-- HEADER -->
<header>


  <%- include('header') -%>




    <div class="text-center text-dark center-div mt-5 " id="login">

      <h5>RESET PASSWORD</h5>



      <div class="row justify-content-center">
        <div class="col-12 col-md-6 col-lg-4" style="min-width: 500px">
          <div class="card bg-white mb-5 mt-5 pt-5 border-border-primary"
            style="box-shadow: 0 12px 15px rgba(0, 0, 0, 0.02)">
            <div class="card-body  text-center">
              <div class="bg-warning" id="messageContainer">

              </div>
              <form class="" action="" method="post">
                <div class="otp-field mb-4">
                  <input type="password" placeholder="enternewpassword" name="pass" id="otpform" />

                </div>
                <p class="text-danger" id="password-error2"></p>

                <div class="otp-field mb-4">
                  <input type="password" placeholder="confirmpassword" name="pass2" id="otpform" />

                </div>
                <p class="text-danger" id="password-error"></p>
                <button class="btn btn-primary  rounded-pill mt-2 w-25" type="submit">update</button>
              </form>
            </div>
          </div>
        </div>
      </div>





      <script>

        document.addEventListener('DOMContentLoaded', function () {
          document.querySelector('form').addEventListener('submit', async function (event) {

            var passwordInput = document.querySelector('input[name="pass"]');
            var passwordInput2 = document.querySelector('input[name="pass2"]');




            var passwordErrorMessage = document.getElementById('password-error');
            var passwordErrorMessage2 = document.getElementById('password-error2');


            passwordErrorMessage.style.display = 'none';
            passwordErrorMessage2.style.display = 'none';

            if (!isStrongPassword(passwordInput.value)) {
              passwordErrorMessage.innerText = 'enter a strong password ';
              passwordErrorMessage.style.display = 'block';
              event.preventDefault(); // Prevent form submission
            }

       
            // Validate Password
           if (passwordInput.value === '' ) {
              passwordErrorMessage.innerText = 'Password cannot be empty';
              passwordErrorMessage.style.display = 'block';
              event.preventDefault(); // Prevent form submission
            }
            if (passwordInput2.value === '' ) {
              passwordErrorMessage2.innerText = 'Password cannot be empty';
              passwordErrorMessage2.style.display = 'block';
              event.preventDefault(); // Prevent form submission
            }
          
          function isStrongPassword(password) {
            // Use a regular expression for strong password validation
            const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[!@#$%^&*(),.?":{}|<>])[A-Za-z\d!@#$%^&*(),.?":{}|<>]{8,}$/;
            return passwordRegex.test(password);
          }
        });


        });






        document.querySelector('form').addEventListener('submit', async function (event) {
          event.preventDefault();

          // Use FormData to serialize the form data
          const formData = new FormData(this);
          try {
            const response = await fetch('/newpassword', {
              method: 'POST',
              body: new URLSearchParams(formData), // Manually set content type to application/x-www-form-urlencoded
              headers: {
                'Content-Type': 'application/x-www-form-urlencoded',
              },
            });

            const result = await response.json();

            // Display the message
            const messageContainer = document.getElementById('messageContainer');
            messageContainer.innerHTML = `<p>${result.message}</p>`;

            // Show the message container
            messageContainer.style.display = 'block';
            setTimeout(() => {
              messageContainer.style.display = 'none'
            }, 6000);



            if (result.success) {
              // Redirect to the specified URL if login is successful
              window.location.href = result.redirect;
            }
          } catch (error) {
            console.error('Error:', error);
          }
        });




      </script>











      <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">


      <style>
        .otp-field {
          flex-direction: row;
          column-gap: 10px;
          display: flex;
          align-items: center;
          justify-content: center;
        }

        .otp-field input {
          height: 45px;
          width: 150px;
          border-radius: 6px;
          outline: none;
          font-size: 1.125rem;
          text-align: center;
          border: 1px solid #ddd;
        }

        .otp-field input:focus {
          box-shadow: 0 1px 0 rgba(0, 0, 0, 0.1);
        }

        .otp-field input::-webkit-inner-spin-button,
        .otp-field input::-webkit-outer-spin-button {
          display: none;
        }

        .resend {
          font-size: 12px;
        }

        .footer {
          position: absolute;
          bottom: 10px;
          right: 10px;
          color: black;
          font-size: 12px;
          text-align: right;
        }

        .footer a {
          color: black;
          text-decoration: none;
        }




        #otpform {
          width: 400px;
          font-size: 20px;
        }
      </style>


      <%- include('footer') -%>